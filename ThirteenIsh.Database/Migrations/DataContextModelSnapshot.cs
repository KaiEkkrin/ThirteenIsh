// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ThirteenIsh.Database;

#nullable disable

namespace ThirteenIsh.Database.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ThirteenIsh.Database.Entities.Character", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CharacterType")
                        .HasColumnType("integer");

                    b.Property<string>("GameSystem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastEdited")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("ThirteenIsh.Database.Entities.Character", b =>
                {
                    b.OwnsOne("ThirteenIsh.Database.Entities.CharacterSheet", "Sheet", b1 =>
                        {
                            b1.Property<long>("CharacterId")
                                .HasColumnType("bigint");

                            b1.HasKey("CharacterId");

                            b1.ToTable("Characters");

                            b1.ToJson("Sheet");

                            b1.WithOwner()
                                .HasForeignKey("CharacterId");

                            b1.OwnsMany("ThirteenIsh.Database.Entities.CharacterCounter", "Counters", b2 =>
                                {
                                    b2.Property<long>("CharacterSheetCharacterId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("Value")
                                        .HasColumnType("integer");

                                    b2.HasKey("CharacterSheetCharacterId", "Id");

                                    b2.ToTable("Characters");

                                    b2.WithOwner()
                                        .HasForeignKey("CharacterSheetCharacterId");
                                });

                            b1.OwnsMany("ThirteenIsh.Database.Entities.CharacterProperty", "Properties", b2 =>
                                {
                                    b2.Property<long>("CharacterSheetCharacterId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("CharacterSheetCharacterId", "Id");

                                    b2.ToTable("Characters");

                                    b2.WithOwner()
                                        .HasForeignKey("CharacterSheetCharacterId");
                                });

                            b1.Navigation("Counters");

                            b1.Navigation("Properties");
                        });

                    b.Navigation("Sheet")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
